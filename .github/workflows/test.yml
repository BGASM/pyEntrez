name: pyentrez test

on: [push]

jobs:

  Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get full python version
      id: full-python-version
      shell: bash
      run: |
        echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info[:3]))")
    - name: Install and setup Poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
        $env:Path += ";$env:Userprofile\.poetry\bin"
        poetry config virtualenvs.in-project true
    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: ${{ runner.os }}-venv-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: |
        $env:Path += ";$env:Userprofile\.poetry\bin"
        poetry install
    - name: Test
      run: |
        $env:Path += ";$env:Userprofile\.poetry\bin"
        $env:Path += ";$env:Userprofile\.poetry\bin"
        poetry run flake8 .
        poetry run mypy pyentrez
        poetry run poetry check
        poetry run pip check
        poetry run safety check --full-report
